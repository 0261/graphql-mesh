// @generated by protobuf-ts 2.4.0 with parameter generate_dependencies,long_type_string,client_grpc1,// @generated from protobuf file "authors/v1/authors_service.proto" (package "authors.v1", syntax proto3),// tslint:disable
import { AuthorsService } from './authors_service';
import type { BinaryWriteOptions } from '@protobuf-ts/runtime';
import type { BinaryReadOptions } from '@protobuf-ts/runtime';
import type { ListAuthorsResponse } from './authors_service';
import type { ListAuthorsRequest } from './authors_service';
import type { Author } from './authors_service';
import type { GetAuthorRequest } from './authors_service';
import * as grpc from '@grpc/grpc-js';
/**
 * @generated from protobuf service authors.v1.AuthorsService
 */
export interface IAuthorsServiceClient {
  /**
   * @generated from protobuf rpc: GetAuthor(authors.v1.GetAuthorRequest) returns (authors.v1.Author);
   */
  getAuthor(
    input: GetAuthorRequest,
    metadata: grpc.Metadata,
    options: grpc.CallOptions,
    callback: (err: grpc.ServiceError | null, value?: Author) => void
  ): grpc.ClientUnaryCall;
  getAuthor(
    input: GetAuthorRequest,
    metadata: grpc.Metadata,
    callback: (err: grpc.ServiceError | null, value?: Author) => void
  ): grpc.ClientUnaryCall;
  getAuthor(
    input: GetAuthorRequest,
    options: grpc.CallOptions,
    callback: (err: grpc.ServiceError | null, value?: Author) => void
  ): grpc.ClientUnaryCall;
  getAuthor(
    input: GetAuthorRequest,
    callback: (err: grpc.ServiceError | null, value?: Author) => void
  ): grpc.ClientUnaryCall;
  /**
   * @generated from protobuf rpc: ListAuthors(authors.v1.ListAuthorsRequest) returns (authors.v1.ListAuthorsResponse);
   */
  listAuthors(
    input: ListAuthorsRequest,
    metadata: grpc.Metadata,
    options: grpc.CallOptions,
    callback: (err: grpc.ServiceError | null, value?: ListAuthorsResponse) => void
  ): grpc.ClientUnaryCall;
  listAuthors(
    input: ListAuthorsRequest,
    metadata: grpc.Metadata,
    callback: (err: grpc.ServiceError | null, value?: ListAuthorsResponse) => void
  ): grpc.ClientUnaryCall;
  listAuthors(
    input: ListAuthorsRequest,
    options: grpc.CallOptions,
    callback: (err: grpc.ServiceError | null, value?: ListAuthorsResponse) => void
  ): grpc.ClientUnaryCall;
  listAuthors(
    input: ListAuthorsRequest,
    callback: (err: grpc.ServiceError | null, value?: ListAuthorsResponse) => void
  ): grpc.ClientUnaryCall;
}
/**
 * @generated from protobuf service authors.v1.AuthorsService
 */
export class AuthorsServiceClient extends grpc.Client implements IAuthorsServiceClient {
  private readonly _binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions>;
  constructor(
    address: string,
    credentials: grpc.ChannelCredentials,
    options: grpc.ClientOptions = {},
    binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions> = {}
  ) {
    super(address, credentials, options);
    this._binaryOptions = binaryOptions;
  }
  /**
   * @generated from protobuf rpc: GetAuthor(authors.v1.GetAuthorRequest) returns (authors.v1.Author);
   */
  getAuthor(
    input: GetAuthorRequest,
    metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: Author) => void),
    options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: Author) => void),
    callback?: (err: grpc.ServiceError | null, value?: Author) => void
  ): grpc.ClientUnaryCall {
    const method = AuthorsService.methods[0];
    return this.makeUnaryRequest<GetAuthorRequest, Author>(
      `/${AuthorsService.typeName}/${method.name}`,
      (value: GetAuthorRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)),
      (value: Buffer): Author => method.O.fromBinary(value, this._binaryOptions),
      input,
      metadata as any,
      options as any,
      callback as any
    );
  }
  /**
   * @generated from protobuf rpc: ListAuthors(authors.v1.ListAuthorsRequest) returns (authors.v1.ListAuthorsResponse);
   */
  listAuthors(
    input: ListAuthorsRequest,
    metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ListAuthorsResponse) => void),
    options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ListAuthorsResponse) => void),
    callback?: (err: grpc.ServiceError | null, value?: ListAuthorsResponse) => void
  ): grpc.ClientUnaryCall {
    const method = AuthorsService.methods[1];
    return this.makeUnaryRequest<ListAuthorsRequest, ListAuthorsResponse>(
      `/${AuthorsService.typeName}/${method.name}`,
      (value: ListAuthorsRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)),
      (value: Buffer): ListAuthorsResponse => method.O.fromBinary(value, this._binaryOptions),
      input,
      metadata as any,
      options as any,
      callback as any
    );
  }
}
