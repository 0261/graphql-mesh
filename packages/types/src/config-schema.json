{
  "definitions": {
    "Extend": {
      "additionalProperties": false,
      "type": "object",
      "title": "Extend",
      "required": [
        "type",
        "sdl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Transformer to add custom SDL to the schema"
        },
        "sdl": {
          "type": "string",
          "description": "GraphQL SDL and apply to the schema"
        }
      }
    },
    "GraphQLHandler": {
      "additionalProperties": false,
      "type": "object",
      "title": "GraphQLHandler",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Handler for remote/local/third-party GraphQL schema"
        },
        "config": {
          "$ref": "#/definitions/GraphQLHandlerConfig",
          "description": "Configuration to pass to `graphql-tools-fork`"
        }
      }
    },
    "GraphQLHandlerConfig": {
      "additionalProperties": false,
      "type": "object",
      "title": "GraphQLHandlerConfig",
      "required": [],
      "properties": {
        "headers": {
          "type": "object",
          "description": "JSON object representing the Headers to add to the runtime of the API calls"
        }
      }
    },
    "JsonSchema": {
      "additionalProperties": false,
      "type": "object",
      "title": "JsonSchema",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Handler for JSON Schema specification. Source could be a local json file, or a url to it."
        },
        "config": {
          "$ref": "#/definitions/JsonSchemaConfig",
          "description": "Configuration"
        }
      }
    },
    "JsonSchemaConfig": {
      "additionalProperties": false,
      "type": "object",
      "title": "JsonSchemaConfig",
      "required": [
        "baseUrl"
      ],
      "properties": {
        "baseUrl": {
          "type": "string"
        },
        "typeReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonSchemaTypeReference"
          },
          "additionalItems": false
        },
        "operationHeaders": {
          "type": "object"
        },
        "schemaHeaders": {
          "type": "object"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonSchemaOperation"
          },
          "additionalItems": false
        }
      }
    },
    "JsonSchemaOperation": {
      "additionalProperties": false,
      "type": "object",
      "title": "JsonSchemaOperation",
      "required": [
        "field",
        "path",
        "type",
        "method",
        "requestSchema",
        "responseSchema"
      ],
      "properties": {
        "field": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Query",
            "Mutation"
          ],
          "description": "Allowed values: Query, Mutation"
        },
        "method": {
          "type": "string",
          "enum": [
            "GET",
            "POST"
          ],
          "description": "Allowed values: GET, POST"
        },
        "requestSchema": {
          "type": "string"
        },
        "responseSchema": {
          "type": "string"
        },
        "headers": {
          "type": "object"
        }
      }
    },
    "JsonSchemaTypeReference": {
      "additionalProperties": false,
      "type": "object",
      "title": "JsonSchemaTypeReference",
      "required": [
        "reference",
        "type"
      ],
      "properties": {
        "reference": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Openapi": {
      "additionalProperties": false,
      "type": "object",
      "title": "Openapi",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Handler for Swagger / OpenAPI 2/3 specification. Source could be a local json/swagger file, or a url to it."
        },
        "config": {
          "$ref": "#/definitions/OpenapiConfig",
          "description": "Configuration to pass to `openapi-to-graphql`"
        }
      }
    },
    "OpenapiConfig": {
      "additionalProperties": false,
      "type": "object",
      "title": "OpenapiConfig",
      "required": [],
      "properties": {
        "headers": {
          "type": "object",
          "description": "JSON object representing the Headers to add to the runtime of the API calls"
        }
      }
    },
    "PostGraphile": {
      "additionalProperties": false,
      "type": "object",
      "title": "PostGraphile",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Handler for Postgres, based on PostGraphile."
        },
        "config": {
          "$ref": "#/definitions/PostGraphileConfig",
          "description": "Configuration to pass to PostGraphile"
        }
      }
    },
    "PostGraphileConfig": {
      "additionalProperties": false,
      "type": "object",
      "title": "PostGraphileConfig",
      "required": [],
      "properties": {
        "schemaName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "additionalItems": false,
          "description": "An array of strings which specifies the PostgreSQL schemas that PostGraphile\nwill use to create a GraphQL schema. The default schema is the public schema."
        },
        "pool": {
          "$ref": "#/definitions/PostGraphilePool",
          "description": "Connection Pool settings"
        }
      }
    },
    "PostGraphilePool": {
      "additionalProperties": false,
      "type": "object",
      "title": "PostGraphilePool",
      "required": [],
      "properties": {
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "database": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "connectionString": {
          "type": "string"
        }
      }
    },
    "Prefix": {
      "additionalProperties": false,
      "type": "object",
      "title": "Prefix",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Transformer to add prefix to the GraphQL types and operations."
        },
        "prefix": {
          "type": "string",
          "description": "The prefix to apply to the schema types. By default it's the API name."
        },
        "ignore": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "additionalItems": false,
          "description": "List of ignored types"
        },
        "includeRootOperations": {
          "type": "boolean",
          "description": "Changes root types and changes the field names"
        }
      }
    },
    "Rename": {
      "additionalProperties": false,
      "type": "object",
      "title": "Rename",
      "required": [
        "type",
        "to"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Transformer to apply rename of a GraphQL type"
        },
        "from": {
          "type": "string",
          "description": "The GraphQL type to rename"
        },
        "to": {
          "type": "string",
          "description": "The new name"
        }
      }
    },
    "Source": {
      "additionalProperties": false,
      "type": "object",
      "title": "Source",
      "required": [
        "name",
        "source",
        "handler"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name you wish to set to your remote API, this will be used for building the GraphQL context"
        },
        "source": {
          "type": "string",
          "description": "A pointer to your API source - could be a local file, remote file or url endpoint"
        },
        "context": {
          "type": "object",
          "description": "Custom JSON object to add to the GraphQL context, use this to inject custom\nfields and later use it in your custom resolver. This object will be located\nin the context, under an object named as the API"
        },
        "handler": {
          "description": "A path to a local file, or a node module name, that handles the conversion of the API source specification (Any of: GraphQLHandler, JsonSchema, Openapi, PostGraphile)",
          "anyOf": [
            {
              "$ref": "#/definitions/GraphQLHandler"
            },
            {
              "$ref": "#/definitions/JsonSchema"
            },
            {
              "$ref": "#/definitions/Openapi"
            },
            {
              "$ref": "#/definitions/PostGraphile"
            }
          ]
        },
        "transformations": {
          "type": "array",
          "items": {
            "description": "Any of: Extend, Prefix, Rename",
            "anyOf": [
              {
                "$ref": "#/definitions/Extend"
              },
              {
                "$ref": "#/definitions/Prefix"
              },
              {
                "$ref": "#/definitions/Rename"
              }
            ]
          },
          "additionalItems": false,
          "description": "List of transformations to apply to the current API source, before unifying it with the rest of the sources (Any of: Extend, Prefix, Rename)"
        }
      }
    }
  },
  "title": "Config",
  "type": "object",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "required": [
    "sources"
  ],
  "properties": {
    "sources": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Source"
      },
      "additionalItems": false,
      "description": "Defines the list of your external data sources for your API mesh"
    },
    "transformations": {
      "type": "array",
      "items": {
        "description": "Any of: Extend, Prefix, Rename",
        "anyOf": [
          {
            "$ref": "#/definitions/Extend"
          },
          {
            "$ref": "#/definitions/Prefix"
          },
          {
            "$ref": "#/definitions/Rename"
          }
        ]
      },
      "additionalItems": false,
      "description": "Transformations to apply to the unified mesh schema (Any of: Extend, Prefix, Rename)"
    },
    "additionalResolvers": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "additionalItems": false,
      "description": "Additional resolvers, or resolvers overrides you wish to add to the schema mesh"
    }
  },
  "additionalProperties": false
}