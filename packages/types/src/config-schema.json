{
  "definitions": {
    "GraphQLHandler": {
      "additionalProperties": false,
      "type": "object",
      "title": "GraphQLHandler",
      "required": [
        "endpoint"
      ],
      "properties": {
        "headers": {
          "type": "object",
          "description": "JSON object representing the Headers to add to the runtime of the API calls"
        },
        "endpoint": {
          "type": "string",
          "description": "A url to your remote GraphQL endpoint"
        }
      }
    },
    "GrpcHandler": {
      "additionalProperties": false,
      "type": "object",
      "title": "GrpcHandler",
      "required": [
        "endpoint",
        "protoFilePath",
        "serviceName",
        "packageName"
      ],
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "protoFilePath": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "packageName": {
          "type": "string"
        }
      }
    },
    "Handler": {
      "additionalProperties": false,
      "type": "object",
      "title": "Handler",
      "required": [],
      "properties": {
        "graphql": {
          "$ref": "#/definitions/GraphQLHandler",
          "description": "Handler for remote/local/third-party GraphQL schema"
        },
        "grpc": {
          "$ref": "#/definitions/GrpcHandler",
          "description": "Handler for gRPC and Protobuf schemas"
        },
        "jsonSchema": {
          "$ref": "#/definitions/JsonSchemaHandler",
          "description": "Handler for JSON Schema specification. Source could be a local json file, or a url to it."
        },
        "openapi": {
          "$ref": "#/definitions/OpenapiHandler",
          "description": "Handler for Swagger / OpenAPI 2/3 specification. Source could be a local json/swagger file, or a url to it."
        },
        "postgraphile": {
          "$ref": "#/definitions/PostGraphileHandler",
          "description": "Handler for Postgres database, based on `postgraphile`"
        },
        "soap": {
          "$ref": "#/definitions/SoapHandler",
          "description": "Handler for SOAP"
        }
      }
    },
    "JsonSchemaHandler": {
      "additionalProperties": false,
      "type": "object",
      "title": "JsonSchemaHandler",
      "required": [
        "baseUrl",
        "operations"
      ],
      "properties": {
        "baseUrl": {
          "type": "string"
        },
        "typeReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonSchemaTypeReference"
          },
          "additionalItems": false
        },
        "operationHeaders": {
          "type": "object"
        },
        "schemaHeaders": {
          "type": "object"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonSchemaOperation"
          },
          "additionalItems": false
        }
      }
    },
    "JsonSchemaOperation": {
      "additionalProperties": false,
      "type": "object",
      "title": "JsonSchemaOperation",
      "required": [
        "field",
        "path",
        "type",
        "method",
        "requestSchema",
        "responseSchema"
      ],
      "properties": {
        "field": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Query",
            "Mutation"
          ],
          "description": "Allowed values: Query, Mutation"
        },
        "method": {
          "type": "string",
          "enum": [
            "GET",
            "DELETE",
            "POST",
            "PUT"
          ],
          "description": "Allowed values: GET, DELETE, POST, PUT"
        },
        "requestSchema": {
          "type": "string"
        },
        "responseSchema": {
          "type": "string"
        },
        "headers": {
          "type": "object"
        }
      }
    },
    "JsonSchemaTypeReference": {
      "additionalProperties": false,
      "type": "object",
      "title": "JsonSchemaTypeReference",
      "required": [
        "reference",
        "sharedType",
        "inputType",
        "outputType"
      ],
      "properties": {
        "reference": {
          "type": "string"
        },
        "sharedType": {
          "type": "string"
        },
        "inputType": {
          "type": "string"
        },
        "outputType": {
          "type": "string"
        }
      }
    },
    "OpenapiHandler": {
      "additionalProperties": false,
      "type": "object",
      "title": "OpenapiHandler",
      "required": [
        "source"
      ],
      "properties": {
        "source": {
          "type": "string",
          "description": "A pointer to your API source - could be a local file, remote file or url endpoint"
        },
        "headers": {
          "type": "object",
          "description": "JSON object representing the Headers to add to the runtime of the API calls"
        }
      }
    },
    "PostGraphileHandler": {
      "additionalProperties": false,
      "type": "object",
      "title": "PostGraphileHandler",
      "required": [
        "connectionString"
      ],
      "properties": {
        "connectionString": {
          "type": "string",
          "description": "A connection string to your Postgres database"
        },
        "schemaName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "additionalItems": false,
          "description": "An array of strings which specifies the PostgreSQL schemas that PostGraphile\nwill use to create a GraphQL schema. The default schema is the public schema."
        },
        "pool": {
          "$ref": "#/definitions/PostGraphilePool",
          "description": "Connection Pool settings"
        }
      }
    },
    "PostGraphilePool": {
      "additionalProperties": false,
      "type": "object",
      "title": "PostGraphilePool",
      "required": [],
      "properties": {
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "database": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "connectionString": {
          "type": "string"
        }
      }
    },
    "PrefixTransformConfig": {
      "additionalProperties": false,
      "type": "object",
      "title": "PrefixTransformConfig",
      "required": [],
      "properties": {
        "value": {
          "type": "string",
          "description": "The prefix to apply to the schema types. By default it's the API name."
        },
        "ignore": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "additionalItems": false,
          "description": "List of ignored types"
        },
        "includeRootOperations": {
          "type": "boolean",
          "description": "Changes root types and changes the field names"
        }
      }
    },
    "RenameTransformObject": {
      "additionalProperties": false,
      "type": "object",
      "title": "RenameTransformObject",
      "required": [
        "from",
        "to"
      ],
      "properties": {
        "from": {
          "type": "string",
          "description": "The GraphQL type to rename"
        },
        "to": {
          "type": "string",
          "description": "The new name"
        }
      }
    },
    "SoapHandler": {
      "additionalProperties": false,
      "type": "object",
      "title": "SoapHandler",
      "required": [
        "wsdl"
      ],
      "properties": {
        "wsdl": {
          "type": "string",
          "description": "A url to your WSDL"
        },
        "config": {
          "type": "object"
        }
      }
    },
    "Source": {
      "additionalProperties": false,
      "type": "object",
      "title": "Source",
      "required": [
        "name",
        "handler"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name you wish to set to your remote API, this will be used for building the GraphQL context"
        },
        "context": {
          "type": "object",
          "description": "Custom JSON object to add to the GraphQL context, use this to inject custom\nfields and later use it in your custom resolver. This object will be located\nin the context, under an object named as the API"
        },
        "handler": {
          "$ref": "#/definitions/Handler",
          "description": "Point to the handler you wish to use, it can either be a predefined handler, or a custom"
        },
        "transforms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transform"
          },
          "additionalItems": false,
          "description": "List of transforms to apply to the current API source, before unifying it with the rest of the sources"
        }
      }
    },
    "Transform": {
      "additionalProperties": false,
      "type": "object",
      "title": "Transform",
      "required": [],
      "properties": {
        "extend": {
          "type": "string",
          "description": "GraphQL SDL and apply to the schema"
        },
        "prefix": {
          "$ref": "#/definitions/PrefixTransformConfig",
          "description": "Prefix transform"
        },
        "rename": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RenameTransformObject"
          },
          "additionalItems": false,
          "description": "Transformer to apply rename of a GraphQL type"
        }
      }
    }
  },
  "title": "Config",
  "type": "object",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "required": [
    "sources"
  ],
  "properties": {
    "sources": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Source"
      },
      "additionalItems": false,
      "description": "Defines the list of your external data sources for your API mesh"
    },
    "transforms": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Transform"
      },
      "additionalItems": false,
      "description": "Transform to apply to the unified mesh schema"
    },
    "additionalResolvers": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "additionalItems": false,
      "description": "Additional resolvers, or resolvers overrides you wish to add to the schema mesh"
    }
  },
  "additionalProperties": false
}