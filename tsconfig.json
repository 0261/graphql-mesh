{
  "compilerOptions": {
    "baseUrl": ".",
    "target": "es2019",
    "module": "esnext",
    "lib": [
      "ESNext",
      "DOM"
    ],
    "skipLibCheck": true,
    "resolveJsonModule": true,
    "allowSyntheticDefaultImports": true,
    "declaration": true /* Generates corresponding '.d.ts' file. */,
    "sourceMap": true /* Generates corresponding '.map' file. */,
    "outDir": "./dist/" /* Redirect output structure to the directory. */,
    "strict": true /* Enable all strict type-checking options. */,
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
    "emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */,
    "forceConsistentCasingInFileNames": true,
    "paths": {
      /* Core, Types, CLI */
      "@graphql-mesh/types": ["./packages/types/src/index.ts"],
      "@graphql-mesh/runtime": ["./packages/runtime/src/index.ts"],
      "@graphql-mesh/cli": ["./packages/cli/src/index.ts"],
      /* Handlers */
      "@graphql-mesh/postgraphile": ["./packages/handlers/postgraphile/src/index.ts"],
      "@graphql-mesh/openapi": ["./packages/handlers/openapi/src/index.ts"],
      "@graphql-mesh/json-schema": ["./packages/handlers/json-schema/src/index.ts"],
      "@graphql-mesh/graphql": ["./packages/handlers/graphql/src/index.ts"],
      /* Transforms */
      "@graphql-mesh/rename": ["./packages/transforms/rename/src/index.ts"],
      "@graphql-mesh/prefix": ["./packages/transforms/prefix/src/index.ts"],
      "@graphql-mesh/extend": ["./packages/transforms/extend/src/index.ts"],
    }
  },
}
