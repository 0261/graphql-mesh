(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{210:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(3),i=n(8),r=(n(0),n(338)),o={id:"live-queries",title:"Live Queries",sidebar_label:"Live Queries"},l={unversionedId:"recipes/live-queries",id:"recipes/live-queries",isDocsHomePage:!1,title:"Live Queries",description:"GraphQL Live Query implementation from Laurin Quast can be used in GraphQL Mesh with a few addition in the configuration.",source:"@site/docs/recipes/live-queries.md",slug:"/recipes/live-queries",permalink:"/docs/recipes/live-queries",editUrl:"https://github.com/urigo/graphql-mesh/edit/master/website/docs/recipes/live-queries.md",version:"current",sidebar_label:"Live Queries",sidebar:"sidebar",previous:{title:"Handle Webhooks with GraphQL Subscriptions",permalink:"/docs/recipes/subscriptions-webhooks"},next:{title:"@graphql-mesh/cli",permalink:"/docs/api/modules/cli"}},s=[{value:"Basic Usage",id:"basic-usage",children:[]},{value:"ID Based Invalidation",id:"id-based-invalidation",children:[]},{value:"Programmatic Usage",id:"programmatic-usage",children:[]}],c={toc:s};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",{align:"center"},Object(r.b)("img",{src:"https://raw.githubusercontent.com/n1ru4l/graphql-live-query/main/assets/logo.svg",width:"300",alt:"GraphQL Live Query"}),Object(r.b)("br",null)),Object(r.b)("p",null,"GraphQL Live Query implementation from ",Object(r.b)("a",{parentName:"p",href:"https://github.com/n1ru4l"},"Laurin Quast")," can be used in GraphQL Mesh with a few addition in the configuration."),Object(r.b)("h3",{id:"basic-usage"},"Basic Usage"),Object(r.b)("p",null,"Let's say you have a ",Object(r.b)("inlineCode",{parentName:"p"},"Query")," root field that returns all ",Object(r.b)("inlineCode",{parentName:"p"},"Todo")," entities from your data source like below;"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-graphql"},"query getTodos {\n    todos {\n        id\n        content\n    }\n}\n")),Object(r.b)("p",null,"And you want to update this operation result automatically without manual refresh when ",Object(r.b)("inlineCode",{parentName:"p"},"Mutation.addTodo")," is called."),Object(r.b)("p",null,"The only thing you need is to add the following configuration to your existing configuration;"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yml"},"additionalTypeDefs: |\n    directive @live on QUERY\nliveQueryInvalidations:\n    - field: Mutation.addTodo\n      invalidate: \n        - Query.todos\n")),Object(r.b)("p",null,"Then you can send a live query with ",Object(r.b)("inlineCode",{parentName:"p"},"@live")," directive;"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-graphql"},"query getTodos @live {\n    todos {\n        id\n        content\n    }\n}\n")),Object(r.b)("p",null,"This will start a real-time connection between server and your client, then the response of ",Object(r.b)("inlineCode",{parentName:"p"},"todos")," will get updated whenever ",Object(r.b)("inlineCode",{parentName:"p"},"addTodo")," is called."),Object(r.b)("h3",{id:"id-based-invalidation"},"ID Based Invalidation"),Object(r.b)("p",null,"Let's say you have the following query that returns specific ",Object(r.b)("inlineCode",{parentName:"p"},"Todo")," entity based on ",Object(r.b)("inlineCode",{parentName:"p"},"id")," field;"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-graphql"},"query getTodo($id: ID!) {\n    todo(id: $id) {]\n        id\n        content\n    }\n}\n")),Object(r.b)("p",null,"And you update this entity with ",Object(r.b)("inlineCode",{parentName:"p"},"editTodo")," mutation field on your backend then you want to invalidate this entity specifically instead of validating all ",Object(r.b)("inlineCode",{parentName:"p"},"todo")," queries;"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yml"},"liveQueryInvalidations:\n    - field: Mutation.editTodo\n      invalidate: \n        - Todo:{args.id}\n")),Object(r.b)("p",null,"In a case where the field resolver resolve null but might resolve to an object type later, e.g. because the visibility got updates the field that uses a specific id argument can be invalidated in the following way:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yml"},'liveQueryInvalidations:\n    - field: Mutation.editTodo\n      invalidate:\n        - Query.todo(id:"{args.id}")\n')),Object(r.b)("h3",{id:"programmatic-usage"},"Programmatic Usage"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"liveQueryStore")," is available in GraphQL Context so you can access it in resolvers composition functions that wrap existing resolvers or additional resolvers;"),Object(r.b)("p",null,"See ",Object(r.b)("a",{parentName:"p",href:"/docs/transforms/resolvers-composition"},"Resolvers Composition")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yml"},"transforms:\n    - resolversComposition:\n        - resolver: Mutation.editTodo\n          composer: invalidate-todo#invalidateTodo\n")),Object(r.b)("p",null,"And in this code file;"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n    invalidateTodo: next => (root, args, context, info) => {\n        const result = await next(root, args, context, info);\n        context.liveQueryStore.invalidate(`Todo:${args.id}`);\n        return result;\n    }\n}\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"You can learn more about ",Object(r.b)("a",{parentName:"p",href:"https://github.com/n1ru4l/graphql-live-query"},"GraphQL Live Query")," in its documentation.")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"You can check out our example that uses live queries")),Object(r.b)("iframe",{src:"https://codesandbox.io/embed/github/Urigo/graphql-mesh/tree/master/examples/json-schema-subscriptions?fontsize=14&hidenavigation=1&theme=dark&module=%2F.meshrc.yml",style:{width:"100%",height:"500px",border:"0",borderRadius:"4px",overflow:"hidden"},title:"json-schema-subscriptions",allow:"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}))}u.isMDXComponent=!0},338:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),u=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),b=a,m=d["".concat(o,".").concat(b)]||d[b]||p[b]||r;return n?i.a.createElement(m,l(l({ref:t},c),{},{components:n})):i.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);