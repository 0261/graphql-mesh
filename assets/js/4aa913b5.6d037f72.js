(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{145:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),o=(n(0),n(293)),i={id:"encapsulate",title:"Encapsulate Transform",sidebar_label:"Encapsulate"},c={unversionedId:"transforms/encapsulate",id:"transforms/encapsulate",isDocsHomePage:!1,title:"Encapsulate Transform",description:"The encapsulate transform allow you to easily encapsulate a specific schema into a single field under the root type.",source:"@site/docs/transforms/encapsulate.md",slug:"/transforms/encapsulate",permalink:"/docs/transforms/encapsulate",editUrl:"https://github.com/urigo/graphql-mesh/edit/master/website/docs/transforms/encapsulate.md",version:"current",sidebar_label:"Encapsulate",sidebar:"sidebar",previous:{title:"Prefix Transform",permalink:"/docs/transforms/prefix"},next:{title:"Cache Transform",permalink:"/docs/transforms/cache"}},l=[{value:"How to use?",id:"how-to-use",children:[]},{value:"Config API Reference",id:"config-api-reference",children:[]}],p={toc:l};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"encapsulate")," transform allow you to easily encapsulate a specific schema into a single field under the root type."),Object(o.b)("p",null,"For instance, if your handler created a schema like this, named ",Object(o.b)("inlineCode",{parentName:"p"},"mySchema"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"}),"type Query {\n  something: String\n}\n\ntype Mutation {\n  doSomething: String\n}\n")),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"encapsulate")," transform will change your schema to this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"}),"type Query {\n  mySchema: mySchemaQuery!\n}\n\ntype Mutation {\n  mySchema: mySchemaMutation!\n}\n\ntype mySchemaQuery {\n  something: String\n}\n\ntype mySchemaMutation {\n  doSomething: String\n}\n")),Object(o.b)("p",null,"This transformer is useful when you have multiple APIs in your Mesh, and you wish to have it wrapped with a name to have a better understanding on where each field is coming from."),Object(o.b)("p",null,"To get started with this transform, install it from npm:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"yarn add @graphql-mesh/transform-encapsulate\n")),Object(o.b)("h2",{id:"how-to-use"},"How to use?"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yml"}),"transforms:\n  - encapsulate\n      applyTo:\n        query: true\n        mutation: false\n        subscription: false\n\n")),Object(o.b)("h2",{id:"config-api-reference"},"Config API Reference"),Object(o.b)("p",null,Object(o.b)("ul",{parentName:"p"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"name")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"String"),") - Optional, name to use for grouping under the root types. If not specific, the API name is used."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"applyTo")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Object"),") - Allow you to choose which root operations you would like to apply. By default, it's applied to all root types.: ",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"query")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Boolean"),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"mutation")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Boolean"),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"subscription")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Boolean"),")"))))))}s.isMDXComponent=!0},293:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),b=r,f=u["".concat(i,".").concat(b)]||u[b]||m[b]||o;return n?a.a.createElement(f,c(c({ref:t},p),{},{components:n})):a.a.createElement(f,c({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);