(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{179:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return s}));var a=t(3),r=t(8),o=(t(0),t(343)),l={id:"mock",title:"Mock Transform",sidebar_label:"Mock"},i={unversionedId:"transforms/mock",id:"transforms/mock",isDocsHomePage:!1,title:"Mock Transform",description:"The mock transform allow you to apply mocking for development usage.",source:"@site/docs/transforms/mock.md",slug:"/transforms/mock",permalink:"/docs/transforms/mock",editUrl:"https://github.com/urigo/graphql-mesh/edit/master/website/docs/transforms/mock.md",version:"current",sidebar_label:"Mock",sidebar:"sidebar",previous:{title:"Snapshot Transform",permalink:"/docs/transforms/snapshot"},next:{title:"Resolvers Composition Transform",permalink:"/docs/transforms/resolvers-composition"}},c=[{value:"How to use?",id:"how-to-use",children:[]},{value:"Custom mock functions for types",id:"custom-mock-functions-for-types",children:[]},{value:"Custom mock functions for fields",id:"custom-mock-functions-for-fields",children:[]},{value:"Mocking the lists",id:"mocking-the-lists",children:[]},{value:"Stateful mocking",id:"stateful-mocking",children:[]},{value:"Codesandbox Example",id:"codesandbox-example",children:[]},{value:"Config API Reference",id:"config-api-reference",children:[]}],m={toc:c};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},m,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"mock")," transform allow you to apply mocking for development usage."),Object(o.b)("p",null,"To get started with this transform, install it from npm:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"yarn add @graphql-mesh/transform-mock\n")),Object(o.b)("h2",{id:"how-to-use"},"How to use?"),Object(o.b)("p",null,"Add the following configuration to your Mesh config file:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yml"},"transforms:\n  - mock:\n      mocks:\n        - apply: User.firstName\n          faker: '{{name.firstName}}'\n")),Object(o.b)("p",null,"The example above will replace the resolver of ",Object(o.b)("inlineCode",{parentName:"p"},"User.firstName")," with a mock that uses ",Object(o.b)("inlineCode",{parentName:"p"},"faker.js")," to generate a random name."),Object(o.b)("h2",{id:"custom-mock-functions-for-types"},"Custom mock functions for types"),Object(o.b)("p",null,"You can mock types with custom mock functions like below;"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yml"},"transforms:\n  - mock:\n      mocks:\n        - apply: DateTime\n          custom: graphql-scalars#DateTimeMock \n          # This will import `DateTimeMock` from `graphql-scalars` for example. Local paths are also supported\n")),Object(o.b)("h2",{id:"custom-mock-functions-for-fields"},"Custom mock functions for fields"),Object(o.b)("p",null,"You can mock a specific field of a type;"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yml"},"transforms:\n  - mock:\n      mocks: \n        - apply: User.fullName\n          custom: ./user-mocks#fullName\n")),Object(o.b)("p",null,"in ",Object(o.b)("inlineCode",{parentName:"p"},"user-mocks.js")," file;"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  fullName: () => 'My Static Name'\n};\n")),Object(o.b)("h2",{id:"mocking-the-lists"},"Mocking the lists"),Object(o.b)("p",null,"By default, Mesh generates two mocked items if the return type is a list. But this can be configured;"),Object(o.b)("p",null,"Let's say, you have a schema like below;"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"  type Query {\n    users: [User]\n  }\n  type User {\n    id: ID\n    fullName: String\n  }\n")),Object(o.b)("p",null,"Then a configuration like below;"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yml"},"transforms:\n  - mock:\n      mocks: \n        - apply: User.fullName\n          faker: '{{name.fullName}}'\n        - apply: Query.users\n          length: 3\n")),Object(o.b)("p",null,"Now ",Object(o.b)("inlineCode",{parentName:"p"},"{ users { id fullName } }")," query will return 3 of ",Object(o.b)("inlineCode",{parentName:"p"},"User")," item;"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "users": [\n    {\n      "id": "SOME_RANDOM_ID",\n      "fullName": "John Doe"\n    },    \n    {\n      "id": "SOME_RANDOM_ID",\n      "fullName": "Jane Doe"\n    },\n    {\n      "id": "SOME_RANDOM_ID",\n      "fullName": "The Other Doe"\n    }\n  ]\n}\n')),Object(o.b)("h2",{id:"stateful-mocking"},"Stateful mocking"),Object(o.b)("p",null,"GraphQL Mesh supports GraphQL Tools's Stateful Mocking feature. So you can have stateful mocking by using the store provided in the context ",Object(o.b)("inlineCode",{parentName:"p"},"context.mockStore"),";"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type User {\n  id: ID\n  name: String\n}\ntype Query {\n  me: User\n}\ntype Mutation {\n  changeMyName(newName: String): User\n}\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yml"},"transforms:\n  - mock:\n      mocks: \n        - apply: Mutation.changeMyName\n          custom: ./myMocks#changeMyName\n")),Object(o.b)("p",null,"In the code part;"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  changeMyName: (_, { newName }, { mockStore }) => {\n    mockStore.set('Query', 'ROOT', 'me', { name: newName });\n    return mockStore.get('Query', 'ROOT', 'me');\n  } \n}\n")),Object(o.b)("p",null,"You can also implement ",Object(o.b)("inlineCode",{parentName:"p"},"*ById")," field declaratively like below;"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type Query {\n  user(id:ID) : User\n}\ntype Mutation {\n  updateUser(id: ID, name: String): User\n}\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yml"},'transforms:\n  - mock:\n      mocks: \n        - apply: Query.user\n          store:\n            type: User\n            key: "{args.id}" \n        - apply: Mutation.addUser\n          updateStore:\n            type: User\n            key: "{random}"\n            fieldName: name\n            value: "{args.name}"\n          store: # return created user\n            type: User\n            key: "{random}"\n        - apply: Mutation.updateUser\n          custom: ./mocks#updateUser\n        # or you can do the following\n          updateStore:\n            type: User\n            key: "{args.id}"\n            fieldName: name\n            value: "{args.name}"\n          store: # return updated user\n            type: User\n            key: "{args.id}"\n\n')),Object(o.b)("p",null,"And in ",Object(o.b)("inlineCode",{parentName:"p"},"mocks.js"),";"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"module.exports.updateUser = (_, { id, name }, { mockStore }) => {\n  mockStore.set('User', id, { name });\n  return mockStore.get('User', id);\n}\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Learn more about GraphQL Tools Mocking; ",Object(o.b)("a",{parentName:"p",href:"https://www.graphql-tools.com/docs/mocking"},"https://www.graphql-tools.com/docs/mocking"))),Object(o.b)("h2",{id:"codesandbox-example"},"Codesandbox Example"),Object(o.b)("p",null,"You can check out our example that uses JSON Schema handler with mock data."),Object(o.b)("iframe",{src:"https://codesandbox.io/embed/github/Urigo/graphql-mesh/tree/master/examples/json-schema-example?fontsize=14&hidenavigation=1&theme=dark&module=%2F.meshrc.yml",style:{width:"100%",height:"500px",border:"0",borderRadius:"4px",overflow:"hidden"},title:"json-schema-example",allow:"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}),Object(o.b)("h2",{id:"config-api-reference"},"Config API Reference"),Object(o.b)("p",null,Object(o.b)("ul",{parentName:"p"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"if")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Boolean"),") - If this expression is truthy, mocking would be enabled\nYou can use environment variables expression, for example: ",Object(o.b)("inlineCode",{parentName:"li"},"${MOCKING_ENABLED}")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"preserveResolvers")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Boolean"),") - Do not mock any other resolvers other than defined in ",Object(o.b)("inlineCode",{parentName:"li"},"mocks"),".\nFor example, you can enable this if you don't want to mock entire schema but partially."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"mocks")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Array of Object"),") - Mock configurations: ",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"apply")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"String"),", required) - Resolver path\nExample: User.firstName"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"if")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Boolean"),") - If this expression is truthy, mocking would be enabled\nYou can use environment variables expression, for example: ",Object(o.b)("inlineCode",{parentName:"li"},"${MOCKING_ENABLED}")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"faker")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"String"),") - Faker.js expression or function\nRead more (",Object(o.b)("a",{parentName:"li",href:"https://github.com/marak/Faker.js/#fakerfake"},"https://github.com/marak/Faker.js/#fakerfake"),')\nExample;\nfaker: name.firstName\nfaker: "{{ name.firstName }} {{ name.lastName }}"'),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"custom")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"String"),') - Custom mocking\nIt can be a module or json file.\nBoth "moduleName#exportName" or only "moduleName" would work'),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"length")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Int"),") - Length of the mock list\nFor the list types ",Object(o.b)("inlineCode",{parentName:"li"},"[ObjectType]"),", how many ",Object(o.b)("inlineCode",{parentName:"li"},"ObjectType")," you want to return?\ndefault: 2"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"store")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Object"),") - Get the data from the mock store: ",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"type")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"String"),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"key")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"ID"),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"fieldName")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"String"),")"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"updateStore")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Array of Object"),") - Update the data on the mock store: ",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"type")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"String"),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"key")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"ID"),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"fieldName")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"String"),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"value")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"String"),")"))))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"initializeStore")," (type: ",Object(o.b)("inlineCode",{parentName:"li"},"Any"),") - The path to the code runs before the store is attached to the schema"))))}s.isMDXComponent=!0},343:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return d}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=r.a.createContext({}),s=function(e){var n=r.a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.a.createElement(m.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=s(t),u=a,d=p["".concat(l,".").concat(u)]||p[u]||b[u]||o;return t?r.a.createElement(d,i(i({ref:n},m),{},{components:t})):r.a.createElement(d,i({ref:n},m))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var m=2;m<o;m++)l[m]=t[m];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);