"use strict";(self.webpackChunk_graphql_mesh_website=self.webpackChunk_graphql_mesh_website||[]).push([[8584],{5318:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||s[d]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4881:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return s}});var r=n(9603),a=n(120),i=(n(7378),n(5318)),o=["components"],l={},p={unversionedId:"generated-markdown/CacheTransformConfig.generated",id:"generated-markdown/CacheTransformConfig.generated",isDocsHomePage:!1,title:"CacheTransformConfig.generated",description:"* field (type Query.*",source:"@site/docs/generated-markdown/CacheTransformConfig.generated.md",sourceDirName:"generated-markdown",slug:"/generated-markdown/CacheTransformConfig.generated",permalink:"/docs/generated-markdown/CacheTransformConfig.generated",editUrl:"https://github.com/urigo/graphql-mesh/edit/master/website/docs/generated-markdown/CacheTransformConfig.generated.md",version:"current",frontMatter:{}},c=[],u={toc:c};function s(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"field")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"String"),", required) - The type and field to apply cache to, you can use wild cards as well, for example: ",(0,i.kt)("inlineCode",{parentName:"li"},"Query.*")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cacheKey")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"String"),") - Cache key to use to store your resolvers responses.\nThe defualt is: {typeName}-{fieldName}-{argsHash}-{fieldNamesHash}")),(0,i.kt)("p",null,"Available variables:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"{args.argName} - use resolver argument"),(0,i.kt)("li",{parentName:"ul"},"{typeName} - use name of the type"),(0,i.kt)("li",{parentName:"ul"},"{fieldName} - use name of the field"),(0,i.kt)("li",{parentName:"ul"},"{argsHash} - a hash based on the 'args' object"),(0,i.kt)("li",{parentName:"ul"},"{fieldNamesHash} - a hash based on the field names selected by the client"),(0,i.kt)("li",{parentName:"ul"},"{info} - the GraphQLResolveInfo of the resolver")),(0,i.kt)("p",null,"Available interpolations:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"{format|date} - returns the current date with a specific format")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"invalidate")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"Object"),") - Invalidation rules: ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"effectingOperations")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"Array of Object"),", required) - Invalidate the cache when a specific operation is done without an error: ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"operation")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"String"),", required) - Path to the operation that could effect it. In a form: Mutation.something. Note that wildcard is not supported in this field."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"matchKey")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"String"),") - Cache key to invalidate on sucessful resolver (no error), see ",(0,i.kt)("inlineCode",{parentName:"li"},"cacheKey")," for list of available options in this field."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ttl")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"Int"),") - Specified in seconds, the time-to-live (TTL) value limits the lifespan")))))}s.isMDXComponent=!0}}]);