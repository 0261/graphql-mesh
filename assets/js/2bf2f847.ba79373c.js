"use strict";(self.webpackChunk_graphql_mesh_website=self.webpackChunk_graphql_mesh_website||[]).push([[5430],{5318:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return d}});var n=t(7378);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),c=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=c(e.components);return n.createElement(i.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(t),d=o,h=m["".concat(i,".").concat(d)]||m[d]||u[d]||a;return t?n.createElement(h,l(l({ref:r},p),{},{components:t})):n.createElement(h,l({ref:r},p))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=m;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var c=2;c<a;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5582:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return s},metadata:function(){return i},toc:function(){return c},default:function(){return u}});var n=t(5773),o=t(808),a=(t(7378),t(5318)),l=["components"],s={id:"custom-server",title:"Custom Server",sidebar_label:"Custom Server (Apollo etc.)"},i={unversionedId:"recipes/custom-server",id:"recipes/custom-server",isDocsHomePage:!1,title:"Custom Server",description:"By default, GraphQL Mesh provides you an HTTP server. You can see the details in Mesh as Gateway page. However, you can replace GraphQL Mesh's default server implementation by a custom one.",source:"@site/docs/recipes/custom-server.md",sourceDirName:"recipes",slug:"/recipes/custom-server",permalink:"/docs/recipes/custom-server",editUrl:"https://github.com/urigo/graphql-mesh/edit/master/website/docs/recipes/custom-server.md",version:"current",sidebar_label:"Custom Server (Apollo etc.)",frontMatter:{id:"custom-server",title:"Custom Server",sidebar_label:"Custom Server (Apollo etc.)"},sidebar:"sidebar",previous:{title:"Mesh as Gateway",permalink:"/docs/recipes/as-gateway"},next:{title:"Handle Webhooks with GraphQL Subscriptions",permalink:"/docs/recipes/subscriptions-webhooks"}},c=[{value:"How to do?",id:"how-to-do",children:[]},{value:"Example",id:"example",children:[]}],p={toc:c};function u(e){var r=e.components,t=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"By default, GraphQL Mesh provides you an HTTP server. You can see the details in ",(0,a.kt)("a",{parentName:"p",href:"/docs/recipes/as-gateway"},"Mesh as Gateway page"),". However, you can replace GraphQL Mesh's default server implementation by a custom one."),(0,a.kt)("h2",{id:"how-to-do"},"How to do?"),(0,a.kt)("p",null,"The following example shows how to replace GraphQL Mesh's default server implementation with ",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/"},"Apollo Server"),";"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"myServerHandler.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { ApolloServer } = require('apollo-server');\n\nmodule.exports = async ({ getBuiltMesh, documents, logger }) => {\n  const { schema, contextBuilder } = await getBuiltMesh();\n  const apolloServer = new ApolloServer({\n    schema,\n    context: ({ req }) => contextBuilder(req),\n    playground: {\n      tabs: documents.map(({ location, rawSDL }) => ({\n        name: location,\n        endpoint: '/graphql',\n        query: rawSDL,\n      })),\n    },\n  });\n\n  const { url } = await apolloServer.listen(4000);\n  logger.info(`\ud83d\ude80 Server ready at ${url}`);\n};\n")),(0,a.kt)("p",null,"Then add the following line to your configuration file;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"serve:\n  customServerHandler: ./myServerHandler.js\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"When you use custom server handler, you won't be able to use configuration options under ",(0,a.kt)("inlineCode",{parentName:"p"},"serve"),"!")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("iframe",{src:"https://codesandbox.io/embed/github/Urigo/graphql-mesh/tree/master/examples/openapi-location-weather?fontsize=14&hidenavigation=1&theme=dark",style:{width:"100%",height:"500px",border:"0",borderRadius:"4px",overflow:"hidden"},title:"typescript-location-weather-example",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}))}u.isMDXComponent=!0}}]);