"use strict";(self.webpackChunk_graphql_mesh_website=self.webpackChunk_graphql_mesh_website||[]).push([[2497],{5318:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,d=m["".concat(p,".").concat(f)]||m[f]||c[f]||o;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9465:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return c}});var r=n(5773),a=n(808),o=(n(7378),n(5318)),i=["components"],l={id:"encapsulate",title:"Encapsulate Transform",sidebar_label:"Encapsulate"},p={unversionedId:"transforms/encapsulate",id:"transforms/encapsulate",isDocsHomePage:!1,title:"Encapsulate Transform",description:"The encapsulate transform allow you to easily encapsulate a specific schema into a single field under the root type.",source:"@site/docs/transforms/encapsulate.md",sourceDirName:"transforms",slug:"/transforms/encapsulate",permalink:"/docs/transforms/encapsulate",editUrl:"https://github.com/urigo/graphql-mesh/edit/master/website/docs/transforms/encapsulate.md",version:"current",sidebar_label:"Encapsulate",frontMatter:{id:"encapsulate",title:"Encapsulate Transform",sidebar_label:"Encapsulate"},sidebar:"sidebar",previous:{title:"Prefix Transform",permalink:"/docs/transforms/prefix"},next:{title:"Cache Transform",permalink:"/docs/transforms/cache"}},s=[{value:"How to use?",id:"how-to-use",children:[]},{value:"Config API Reference",id:"config-api-reference",children:[]}],u={toc:s};function c(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"encapsulate")," transform allow you to easily encapsulate a specific schema into a single field under the root type."),(0,o.kt)("p",null,"For instance, if your handler created a schema like this, named ",(0,o.kt)("inlineCode",{parentName:"p"},"mySchema"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"type Query {\n  something: String\n}\n\ntype Mutation {\n  doSomething: String\n}\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"encapsulate")," transform will change your schema to this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"type Query {\n  mySchema: mySchemaQuery!\n}\n\ntype Mutation {\n  mySchema: mySchemaMutation!\n}\n\ntype mySchemaQuery {\n  something: String\n}\n\ntype mySchemaMutation {\n  doSomething: String\n}\n")),(0,o.kt)("p",null,"This transformer is useful when you have multiple APIs in your Mesh, and you wish to have it wrapped with a name to have a better understanding on where each field is coming from."),(0,o.kt)("p",null,"To get started with this transform, install it from npm:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn add @graphql-mesh/transform-encapsulate\n")),(0,o.kt)("h2",{id:"how-to-use"},"How to use?"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"transforms:\n  - encapsulate:\n      applyTo:\n        query: true\n        mutation: false\n        subscription: false\n\n")),(0,o.kt)("h2",{id:"config-api-reference"},"Config API Reference"),(0,o.kt)("p",null,(0,o.kt)("ul",{parentName:"p"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"name")," (type: ",(0,o.kt)("inlineCode",{parentName:"li"},"String"),") - Optional, name to use for grouping under the root types. If not specific, the API name is used."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"applyTo")," (type: ",(0,o.kt)("inlineCode",{parentName:"li"},"Object"),") - Allow you to choose which root operations you would like to apply. By default, it's applied to all root types.: ",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"query")," (type: ",(0,o.kt)("inlineCode",{parentName:"li"},"Boolean"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"mutation")," (type: ",(0,o.kt)("inlineCode",{parentName:"li"},"Boolean"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"subscription")," (type: ",(0,o.kt)("inlineCode",{parentName:"li"},"Boolean"),")"))))))}c.isMDXComponent=!0}}]);