"use strict";(self.webpackChunk_graphql_mesh_website=self.webpackChunk_graphql_mesh_website||[]).push([[3348],{35318:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return u}});var r=n(27378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=i,g=m["".concat(p,".").concat(u)]||m[u]||f[u]||o;return n?r.createElement(g,a(a({ref:t},l),{},{components:n})):r.createElement(g,a({ref:t},l))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},41323:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return f}});var r=n(25773),i=n(30808),o=(n(27378),n(35318)),a=["components"],s={},p={unversionedId:"api/interfaces/types_src.YamlConfig.MockingConfig",id:"api/interfaces/types_src.YamlConfig.MockingConfig",isDocsHomePage:!1,title:"Interface: MockingConfig",description:"types/src.YamlConfig.MockingConfig",source:"@site/docs/api/interfaces/types_src.YamlConfig.MockingConfig.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/types_src.YamlConfig.MockingConfig",permalink:"/docs/api/interfaces/types_src.YamlConfig.MockingConfig",editUrl:"https://github.com/urigo/graphql-mesh/edit/master/website/docs/api/interfaces/types_src.YamlConfig.MockingConfig.md",version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Interface: MeshTransformOptions&lt;Config\\&gt;",permalink:"/docs/api/interfaces/types_src.MeshTransformOptions"},next:{title:"Interface: MockingFieldConfig",permalink:"/docs/api/interfaces/types_src.YamlConfig.MockingFieldConfig"}},c=[{value:"Table of contents",id:"table-of-contents",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"if",id:"if",children:[]},{value:"initializeStore",id:"initializestore",children:[]},{value:"mocks",id:"mocks",children:[]},{value:"preserveResolvers",id:"preserveresolvers",children:[]}]}],l={toc:c};function f(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"../modules/types_src"},"types/src"),".",(0,o.kt)("a",{parentName:"p",href:"../modules/types_src.YamlConfig"},"YamlConfig"),".MockingConfig"),(0,o.kt)("p",null,"Mock configuration for your source"),(0,o.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,o.kt)("h3",{id:"properties"},"Properties"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api/interfaces/types_src.YamlConfig.MockingConfig#if"},"if")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api/interfaces/types_src.YamlConfig.MockingConfig#initializestore"},"initializeStore")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api/interfaces/types_src.YamlConfig.MockingConfig#mocks"},"mocks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api/interfaces/types_src.YamlConfig.MockingConfig#preserveresolvers"},"preserveResolvers"))),(0,o.kt)("h2",{id:"properties-1"},"Properties"),(0,o.kt)("h3",{id:"if"},"if"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},"if"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")),(0,o.kt)("p",null,"If this expression is truthy, mocking would be enabled\nYou can use environment variables expression, for example: ",(0,o.kt)("inlineCode",{parentName:"p"},"${MOCKING_ENABLED}")),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-mesh/blob/master/packages/types/src/config.ts#L1078"},"packages/types/src/config.ts:1078")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"initializestore"},"initializeStore"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},"initializeStore"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"any")),(0,o.kt)("p",null,"The path to the code runs before the store is attached to the schema"),(0,o.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-mesh/blob/master/packages/types/src/config.ts#L1091"},"packages/types/src/config.ts:1091")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"mocks"},"mocks"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},"mocks"),": ",(0,o.kt)("a",{parentName:"p",href:"types_src.YamlConfig.MockingFieldConfig"},"MockingFieldConfig"),"[]"),(0,o.kt)("p",null,"Mock configurations"),(0,o.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-mesh/blob/master/packages/types/src/config.ts#L1087"},"packages/types/src/config.ts:1087")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"preserveresolvers"},"preserveResolvers"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},"preserveResolvers"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")),(0,o.kt)("p",null,"Do not mock any other resolvers other than defined in ",(0,o.kt)("inlineCode",{parentName:"p"},"mocks"),".\nFor example, you can enable this if you don't want to mock entire schema but partially."),(0,o.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-mesh/blob/master/packages/types/src/config.ts#L1083"},"packages/types/src/config.ts:1083")))}f.isMDXComponent=!0}}]);