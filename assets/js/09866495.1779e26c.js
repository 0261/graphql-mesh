"use strict";(self.webpackChunk_graphql_mesh_website=self.webpackChunk_graphql_mesh_website||[]).push([[1094],{5318:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return u}});var n=r(7378);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),g=c(r),u=i,m=g["".concat(s,".").concat(u)]||g[u]||f[u]||o;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function u(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=g;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:i,a[1]=p;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},5564:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return f}});var n=r(5773),i=r(808),o=(r(7378),r(5318)),a=["components"],p={},s={unversionedId:"api/interfaces/types_src.YamlConfig.TypeMergingConfig",id:"api/interfaces/types_src.YamlConfig.TypeMergingConfig",isDocsHomePage:!1,title:"Interface: TypeMergingConfig",description:"types/src.YamlConfig.TypeMergingConfig",source:"@site/docs/api/interfaces/types_src.YamlConfig.TypeMergingConfig.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/types_src.YamlConfig.TypeMergingConfig",permalink:"/docs/api/interfaces/types_src.YamlConfig.TypeMergingConfig",editUrl:"https://github.com/urigo/graphql-mesh/edit/master/website/docs/api/interfaces/types_src.YamlConfig.TypeMergingConfig.md",version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Interface: TypeConverterResolversOpts1",permalink:"/docs/api/interfaces/types_src.YamlConfig.TypeConverterResolversOpts1"},next:{title:"Interface: UpdateMockStoreConfig",permalink:"/docs/api/interfaces/types_src.YamlConfig.UpdateMockStoreConfig"}},c=[{value:"Table of contents",id:"table-of-contents",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"queryFields",id:"queryfields",children:[]},{value:"types",id:"types",children:[]}]}],l={toc:c};function f(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"../modules/types_src"},"types/src"),".",(0,o.kt)("a",{parentName:"p",href:"../modules/types_src.YamlConfig"},"YamlConfig"),".TypeMergingConfig"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.graphql-tools.com/docs/stitch-type-merging"},"Type Merging")," Configuration"),(0,o.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,o.kt)("h3",{id:"properties"},"Properties"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api/interfaces/types_src.YamlConfig.TypeMergingConfig#queryfields"},"queryFields")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api/interfaces/types_src.YamlConfig.TypeMergingConfig#types"},"types"))),(0,o.kt)("h2",{id:"properties-1"},"Properties"),(0,o.kt)("h3",{id:"queryfields"},"queryFields"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},"queryFields"),": ",(0,o.kt)("a",{parentName:"p",href:"types_src.YamlConfig.MergedRootFieldConfig"},"MergedRootFieldConfig"),"[]"),(0,o.kt)("p",null,"Denotes a root field used to query a merged type across services.\nThe marked field's name is analogous\nto the fieldName setting in\n",(0,o.kt)("a",{parentName:"p",href:"https://www.graphql-tools.com/docs/stitch-type-merging#basic-example"},"merged type configuration"),",\nwhile the field's arguments and return type are used to infer merge configuration.\nDirective arguments tune the merge behavior"),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-mesh/blob/master/packages/types/src/config.ts#L1253"},"packages/types/src/config.ts:1253")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"types"},"types"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},"types"),": ",(0,o.kt)("a",{parentName:"p",href:"types_src.YamlConfig.MergedTypeConfig"},"MergedTypeConfig"),"[]"),(0,o.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-mesh/blob/master/packages/types/src/config.ts#L1244"},"packages/types/src/config.ts:1244")))}f.isMDXComponent=!0}}]);