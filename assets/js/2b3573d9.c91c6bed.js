(self.webpackChunk_graphql_mesh_website=self.webpackChunk_graphql_mesh_website||[]).push([[8213],{5318:function(e,n,r){"use strict";r.d(n,{Zo:function(){return s},kt:function(){return f}});var t=r(7378);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=t.createContext({}),m=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},s=function(e){var n=m(e.components);return t.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=m(r),f=a,d=c["".concat(p,".").concat(f)]||c[f]||u[f]||i;return r?t.createElement(d,o(o({ref:n},s),{},{components:r})):t.createElement(d,o({ref:n},s))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=c;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var m=2;m<i;m++)o[m]=r[m];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}c.displayName="MDXCreateElement"},3894:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p},default:function(){return s}});var t=r(9603),a=r(120),i=(r(7378),r(5318)),o={id:"rename",title:"Rename Transform",sidebar_label:"Rename"},l={unversionedId:"transforms/rename",id:"transforms/rename",isDocsHomePage:!1,title:"Rename Transform",description:"The rename transform allow you rename GraphQL types and GraphQL fields easily.",source:"@site/docs/transforms/rename.md",sourceDirName:"transforms",slug:"/transforms/rename",permalink:"/docs/transforms/rename",editUrl:"https://github.com/urigo/graphql-mesh/edit/master/website/docs/transforms/rename.md",version:"current",sidebar_label:"Rename",frontMatter:{id:"rename",title:"Rename Transform",sidebar_label:"Rename"},sidebar:"sidebar",previous:{title:"Neo4j",permalink:"/docs/handlers/neo4j"},next:{title:"Prefix Transform",permalink:"/docs/transforms/prefix"}},p=[{value:"How to use?",id:"how-to-use",children:[]},{value:"Config API Reference",id:"config-api-reference",children:[]}],m={toc:p};function s(e){var n=e.components,r=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"rename")," transform allow you rename GraphQL types and GraphQL fields easily."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"yarn add @graphql-mesh/transform-rename\n")),(0,i.kt)("h2",{id:"how-to-use"},"How to use?"),(0,i.kt)("p",null,"Add the following configuration to your Mesh config file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"transforms:\n  - rename:\n      mode: bare | wrap\n      renames:\n        - from:\n            type: ApiUser\n          to:\n            type: User\n        - from:\n            type: Query\n            field: apiUser\n          to:\n            type: Query\n            field: user\n")),(0,i.kt)("p",null,"or you can use regular expressions to rename multiple types, fields or both"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"- rename:\n    mode: bare | wrap\n    renames:\n      - from:\n          type: Api(.*)\n        to:\n          type: $1\n        useRegExpForTypes: true\n\n      - from:\n          type: Query\n          field: api(.*)\n        to:\n          type: Query\n          field: $1\n        useRegExpForFields: true\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},'For information about "bare" and "wrap" modes, please read the ',(0,i.kt)("a",{parentName:"p",href:"/docs/getting-started/mesh-transforms#two-different-modes"},"dedicated section"),".")),(0,i.kt)("h2",{id:"config-api-reference"},"Config API Reference"),(0,i.kt)("p",null,(0,i.kt)("ul",{parentName:"p"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mode")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"String (bare | wrap)"),") - Specify to apply rename transforms to bare schema or by wrapping original schema"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"renames")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"Array of Object"),", required) - Array of rename rules: ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"from")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"Object"),", required): ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"String"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"field")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"String"),")"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"to")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"Object"),", required): ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"String"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"field")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"String"),")"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"useRegExpForTypes")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"Boolean"),") - Use Regular Expression for type names"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"useRegExpForFields")," (type: ",(0,i.kt)("inlineCode",{parentName:"li"},"Boolean"),") - Use Regular Expression for field names"))))))}s.isMDXComponent=!0}}]);