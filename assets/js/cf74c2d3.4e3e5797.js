(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{264:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return o})),n.d(r,"metadata",(function(){return s})),n.d(r,"toc",(function(){return l})),n.d(r,"default",(function(){return m}));var t=n(3),a=n(7),i=(n(0),n(304)),o={id:"filter-schema",title:"Filter Schema Transform",sidebar_label:"Filter Schema"},s={unversionedId:"transforms/filter-schema",id:"transforms/filter-schema",isDocsHomePage:!1,title:"Filter Schema Transform",description:"The filterSchema transform allows you to filter fields in specific types.",source:"@site/docs/transforms/filter-schema.md",slug:"/transforms/filter-schema",permalink:"/docs/transforms/filter-schema",editUrl:"https://github.com/urigo/graphql-mesh/edit/master/website/docs/transforms/filter-schema.md",version:"current",sidebar_label:"Filter Schema",sidebar:"sidebar",previous:{title:"Apollo Federation Transform",permalink:"/docs/transforms/federation"},next:{title:"Naming Convention Transform",permalink:"/docs/transforms/naming-convention"}},l=[{value:"How to use?",id:"how-to-use",children:[]},{value:"Config API Reference",id:"config-api-reference",children:[]}],c={toc:l};function m(e){var r=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},c,n,{components:r,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"filterSchema")," transform allows you to filter fields in specific types."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"yarn add @graphql-mesh/transform-filter-schema\n")),Object(i.b)("h2",{id:"how-to-use"},"How to use?"),Object(i.b)("p",null,"Add the following configuration to your Mesh config file:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"transforms:\n  - filterSchema:\n      mode: bare | wrap\n      filters:\n        - Type.!User # <-- This will remove `User` type\n        - Type.!{User, Post} # <-- This will remove `User` and `Post` types\n\n        - Query.!admins # <-- This will remove field `admins` from `Query` type\n        - Mutation.!{addUser, removeUser} # <-- This will remove fields `addUser` and `removeUser` from `Mutation` type\n        - User.{id, username, name, age} # <-- This will remove all fields, from User type, except `id`, `username`, `name` and `age`\n\n        - Query.user.id # <-- This will remove all args from field `user`, in Query type, except `id` only\n        - Query.user.!name # <-- This will remove argument `id` from field `user`, in Query type\n        - Query.user.{id, name} # <-- This will remove all args for field `user`, in Query type, except `id` and `name`\n        - Query.user.!{id, name} # <-- This will remove args `id` and `name` from field `user`, in Query type\n")),Object(i.b)("p",null,"Let's assume you have the following schema,"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"type Query {\n  me: User\n  users: [User]\n  user(id: ID, name: String): User\n  admins: [User]\n}\n\ntype Mutation {\n  updateMyProfile(name: String, age: Int): User\n  addUser(username: String, name: String, age: Int): User\n  removeUser(id: ID): ID\n}\n\ntype User {\n  id: ID\n  username: String\n  password: String\n  name: String\n  age: Int\n  ipAddress: String\n}\n\ntype LooseType {\n  foo: String\n  bar: String\n}\n")),Object(i.b)("p",null,"With the following Filter Schema config,"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"transforms:\n  - filterSchema:\n      mode: bare | wrap\n      filters:\n        - Type.!LooseType\n        - Query.!admins\n        - Mutation.!{addUser, removeUser}\n        - User.{username, name, age}\n        - Query.user.!name\n")),Object(i.b)("p",null,"It would become the following schema:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-graphql"},"type Query {\n  me: User\n  users: [User]\n  user(id: ID): User\n}\n\ntype Mutation {\n  updateMyProfile(name: String, age: Int): User\n}\n\ntype User {\n  username: String\n  name: String\n  age: Int\n}\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},'For information about "bare" and "wrap" modes, please read the ',Object(i.b)("a",{parentName:"p",href:"/docs/getting-started/mesh-transforms#two-different-modes"},"dedicated section"),".")),Object(i.b)("h2",{id:"config-api-reference"},"Config API Reference"),Object(i.b)("p",null,Object(i.b)("ul",{parentName:"p"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"mode")," (type: ",Object(i.b)("inlineCode",{parentName:"li"},"String (bare | wrap)"),") - Specify to apply filter-schema transforms to bare schema or by wrapping original schema"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"filters")," (type: ",Object(i.b)("inlineCode",{parentName:"li"},"Array of String"),", required) - Array of filter rules"))))}m.isMDXComponent=!0},304:function(e,r,n){"use strict";n.d(r,"a",(function(){return p})),n.d(r,"b",(function(){return d}));var t=n(0),a=n.n(t);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),m=function(e){var r=a.a.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},p=function(e){var r=m(e.components);return a.a.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},f=a.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=m(n),f=t,d=p["".concat(o,".").concat(f)]||p[f]||u[f]||i;return n?a.a.createElement(d,s(s({ref:r},c),{},{components:n})):a.a.createElement(d,s({ref:r},c))}));function d(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:t,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);